/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Cephy_2015;


import java.lang.Math.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;


/**
 *
 * @author Patient K.-MULEKYA
 */
public class Cephy_2015 extends javax.swing.JFrame {

    /**
     * Creates new form Cephy_2015
     */
    public Cephy_2015() {
        initComponents();
       
        moreInit();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem4 = new javax.swing.JMenuItem();
        TabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPaneDonnees = new javax.swing.JTabbedPane();
        jTabbedPaneExploDonnees = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanelRecoitGraphLocDesPuits = new javax.swing.JPanel();
        jPanelBoutonLocDesPuits = new javax.swing.JPanel();
        jButtonEtiquetterLePuits = new javax.swing.JButton();
        jComboBoxGRAPH = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPaneVariogrammes = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButton_AfficherVarioTOIT = new javax.swing.JButton();
        jComboBox_ToléranceTOIT = new javax.swing.JComboBox();
        jSpinner_MinCoupleTOIT = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton_AfficherVarioMur = new javax.swing.JButton();
        jComboBox_ToléranceMUR = new javax.swing.JComboBox();
        jSpinner_MinCoupleMUR = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jButton_AfficherVarioPOROSITE = new javax.swing.JButton();
        jComboBox_TolérancePOROSITE = new javax.swing.JComboBox();
        jSpinner_MinCouplePOROSITE = new javax.swing.JSpinner();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jButton_AfficherVarioSATURATION = new javax.swing.JButton();
        jComboBox_ToléranceSATURATION = new javax.swing.JComboBox();
        jSpinner_MinCoupleSATURATION = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jButton_AfficherVarioARGILE = new javax.swing.JButton();
        jComboBox_ToléranceARGILE = new javax.swing.JComboBox();
        jSpinner_MinCoupleARGILE = new javax.swing.JSpinner();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTabbedPaneKrigeage = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        Calculer = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabelSTOIIP = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelSTOIIP1 = new javax.swing.JLabel();
        jLabel_GIIP = new javax.swing.JLabel();
        jButtonAfficherTOIT = new javax.swing.JButton();
        jButtonAfficherSTOIIPNetPat = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelNotification = new javax.swing.JLabel();
        jComboBoxLONGITUDE = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxLATITUDE = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxTOIT = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxETIQUETTE = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxMUR = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxPOROSITE = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxSATURATIONhuile = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jComboBoxARGILE = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        Fichier = new javax.swing.JMenu();
        Ouvrir = new javax.swing.JMenuItem();
        Enregistrer = new javax.swing.JMenuItem();
        Exporter = new javax.swing.JMenuItem();
        Rapport = new javax.swing.JMenuItem();
        Quitter = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cephy_2015");
        setName("cephy_2015"); // NOI18N

        TabbedPane1.addTab("Donnees", jTabbedPaneDonnees);

        jPanelRecoitGraphLocDesPuits.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRecoitGraphLocDesPuits.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        javax.swing.GroupLayout jPanelRecoitGraphLocDesPuitsLayout = new javax.swing.GroupLayout(jPanelRecoitGraphLocDesPuits);
        jPanelRecoitGraphLocDesPuits.setLayout(jPanelRecoitGraphLocDesPuitsLayout);
        jPanelRecoitGraphLocDesPuitsLayout.setHorizontalGroup(
            jPanelRecoitGraphLocDesPuitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        jPanelRecoitGraphLocDesPuitsLayout.setVerticalGroup(
            jPanelRecoitGraphLocDesPuitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelBoutonLocDesPuits.setBorder(new javax.swing.border.MatteBorder(null));

        jButtonEtiquetterLePuits.setText("Explorer");
        jButtonEtiquetterLePuits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEtiquetterLePuitsActionPerformed(evt);
            }
        });

        jComboBoxGRAPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGRAPHActionPerformed(evt);
            }
        });

        jLabel5.setText("Paramètre");

        javax.swing.GroupLayout jPanelBoutonLocDesPuitsLayout = new javax.swing.GroupLayout(jPanelBoutonLocDesPuits);
        jPanelBoutonLocDesPuits.setLayout(jPanelBoutonLocDesPuitsLayout);
        jPanelBoutonLocDesPuitsLayout.setHorizontalGroup(
            jPanelBoutonLocDesPuitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBoutonLocDesPuitsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBoutonLocDesPuitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonEtiquetterLePuits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBoutonLocDesPuitsLayout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxGRAPH, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelBoutonLocDesPuitsLayout.setVerticalGroup(
            jPanelBoutonLocDesPuitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBoutonLocDesPuitsLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelBoutonLocDesPuitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxGRAPH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(49, 49, 49)
                .addComponent(jButtonEtiquetterLePuits)
                .addContainerGap(388, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelRecoitGraphLocDesPuits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBoutonLocDesPuits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelRecoitGraphLocDesPuits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBoutonLocDesPuits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneExploDonnees.addTab("Localisation des puits", jPanel1);

        TabbedPane1.addTab("Exploration des donnees", jTabbedPaneExploDonnees);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        jButton_AfficherVarioTOIT.setText("Afficher");
        jButton_AfficherVarioTOIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AfficherVarioTOITActionPerformed(evt);
            }
        });

        jSpinner_MinCoupleTOIT.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner_MinCoupleTOIT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSpinner_MinCoupleTOIT.setDoubleBuffered(true);
        jSpinner_MinCoupleTOIT.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner_MinCoupleTOIT, ""));
        jSpinner_MinCoupleTOIT.setName(""); // NOI18N

        jLabel15.setText("Min Couple");

        jLabel16.setText("Tolérance");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner_MinCoupleTOIT, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jComboBox_ToléranceTOIT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton_AfficherVarioTOIT, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jButton_AfficherVarioTOIT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_ToléranceTOIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_MinCoupleTOIT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneVariogrammes.addTab("TOIT", jPanel2);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        jButton_AfficherVarioMur.setText("Afficher");
        jButton_AfficherVarioMur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AfficherVarioMurActionPerformed(evt);
            }
        });

        jSpinner_MinCoupleMUR.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner_MinCoupleMUR.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSpinner_MinCoupleMUR.setDoubleBuffered(true);
        jSpinner_MinCoupleMUR.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner_MinCoupleMUR, ""));
        jSpinner_MinCoupleMUR.setName(""); // NOI18N

        jLabel20.setText("Min Couple");

        jLabel21.setText("Tolérance");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton_AfficherVarioMur, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner_MinCoupleMUR)
                            .addComponent(jComboBox_ToléranceMUR, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton_AfficherVarioMur)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_ToléranceMUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_MinCoupleMUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneVariogrammes.addTab("MUR", jPanel8);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        jButton_AfficherVarioPOROSITE.setText("Afficher");
        jButton_AfficherVarioPOROSITE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AfficherVarioPOROSITEActionPerformed(evt);
            }
        });

        jSpinner_MinCouplePOROSITE.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner_MinCouplePOROSITE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSpinner_MinCouplePOROSITE.setDoubleBuffered(true);
        jSpinner_MinCouplePOROSITE.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner_MinCouplePOROSITE, ""));
        jSpinner_MinCouplePOROSITE.setName(""); // NOI18N

        jLabel22.setText("Min Couple");

        jLabel23.setText("Tolérance");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton_AfficherVarioPOROSITE, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner_MinCouplePOROSITE)
                            .addComponent(jComboBox_TolérancePOROSITE, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton_AfficherVarioPOROSITE)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_TolérancePOROSITE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_MinCouplePOROSITE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneVariogrammes.addTab("POROSITE", jPanel11);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        jButton_AfficherVarioSATURATION.setText("Afficher");
        jButton_AfficherVarioSATURATION.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AfficherVarioSATURATIONActionPerformed(evt);
            }
        });

        jSpinner_MinCoupleSATURATION.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner_MinCoupleSATURATION.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSpinner_MinCoupleSATURATION.setDoubleBuffered(true);
        jSpinner_MinCoupleSATURATION.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner_MinCoupleSATURATION, ""));
        jSpinner_MinCoupleSATURATION.setName(""); // NOI18N

        jLabel24.setText("Min Couple");

        jLabel25.setText("Tolérance");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton_AfficherVarioSATURATION, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner_MinCoupleSATURATION)
                            .addComponent(jComboBox_ToléranceSATURATION, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton_AfficherVarioSATURATION)
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_ToléranceSATURATION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_MinCoupleSATURATION, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneVariogrammes.addTab("SATURATION", jPanel14);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 940, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        jButton_AfficherVarioARGILE.setText("Afficher");
        jButton_AfficherVarioARGILE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AfficherVarioARGILEActionPerformed(evt);
            }
        });

        jSpinner_MinCoupleARGILE.setModel(new javax.swing.SpinnerNumberModel());
        jSpinner_MinCoupleARGILE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSpinner_MinCoupleARGILE.setDoubleBuffered(true);
        jSpinner_MinCoupleARGILE.setEditor(new javax.swing.JSpinner.NumberEditor(jSpinner_MinCoupleARGILE, ""));
        jSpinner_MinCoupleARGILE.setName(""); // NOI18N

        jLabel26.setText("Min Couple");

        jLabel27.setText("Tolérance");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton_AfficherVarioARGILE, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 26, Short.MAX_VALUE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner_MinCoupleARGILE)
                            .addComponent(jComboBox_ToléranceARGILE, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton_AfficherVarioARGILE)
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_ToléranceARGILE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner_MinCoupleARGILE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPaneVariogrammes.addTab("NET- PAY", jPanel17);

        TabbedPane1.addTab("Variogrammes", jTabbedPaneVariogrammes);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 947, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
        );

        Calculer.setText("CALCULER");
        Calculer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculerActionPerformed(evt);
            }
        });

        jLabel9.setText("OIIP =");

        jLabelSTOIIP.setText("   ");

        jButtonAfficherTOIT.setText("Afficher Carte TOIT");
        jButtonAfficherTOIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAfficherTOITActionPerformed(evt);
            }
        });

        jButtonAfficherSTOIIPNetPat.setText("Carte NetPay--STOIIP");
        jButtonAfficherSTOIIPNetPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAfficherSTOIIPNetPatActionPerformed(evt);
            }
        });

        jLabel36.setText("réalisé par Patient et Alex");

        jLabel37.setText("© cephy 2015, unikin");

        jLabel38.setText("dirigé par : Prof. Kasongo N.");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonAfficherSTOIIPNetPat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Calculer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonAfficherTOIT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_GIIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabelSTOIIP1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(89, 89, 89))
                                    .addComponent(jLabelSTOIIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(39, Short.MAX_VALUE)
                    .addComponent(jLabel37)
                    .addGap(21, 21, 21)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Calculer, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAfficherTOIT)
                .addGap(18, 18, 18)
                .addComponent(jButtonAfficherSTOIIPNetPat)
                .addGap(86, 86, 86)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabelSTOIIP))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_GIIP)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jLabelSTOIIP1)))
                .addGap(83, 83, 83)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38)
                .addGap(95, 95, 95)
                .addComponent(jLabel33))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                    .addContainerGap(406, Short.MAX_VALUE)
                    .addComponent(jLabel37)
                    .addGap(75, 75, 75)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPaneKrigeage.addTab("tab1", jPanel5);

        TabbedPane1.addTab("Krigeage", jTabbedPaneKrigeage);

        jLabel1.setText("Notification :");

        jLabelNotification.setText("Charger le fichier des données au format text aux colonnes séparées par des espaces blancs (tabulation)");

        jComboBoxLONGITUDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLONGITUDEActionPerformed(evt);
            }
        });

        jLabel2.setText("Longitude :");

        jLabel3.setText("Latitude :");

        jLabel4.setText("Toit :");

        jComboBoxTOIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTOITActionPerformed(evt);
            }
        });

        jLabel6.setText("Etiquette :");

        jComboBoxETIQUETTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxETIQUETTEActionPerformed(evt);
            }
        });

        jLabel11.setText("Mur :");

        jLabel17.setText("Porosité : ");

        jLabel18.setText("Saturation en huile :");

        jLabel19.setText("Net - Pay   :");

        Fichier.setText("Fichier");

        Ouvrir.setText("Importer");
        Ouvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OuvrirActionPerformed(evt);
            }
        });
        Fichier.add(Ouvrir);

        Enregistrer.setText("Enregistrer");
        Enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerActionPerformed(evt);
            }
        });
        Fichier.add(Enregistrer);

        Exporter.setText("Exporter");
        Fichier.add(Exporter);

        Rapport.setText("Rapport");
        Fichier.add(Rapport);

        Quitter.setText("Quitter");
        Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitterActionPerformed(evt);
            }
        });
        Fichier.add(Quitter);

        jMenuBar1.add(Fichier);

        jMenu1.setText("A propos");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addComponent(jComboBoxETIQUETTE, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17)
                        .addComponent(jComboBoxLONGITUDE, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxLATITUDE, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxTOIT, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxMUR, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxPOROSITE, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxSATURATIONhuile, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxARGILE, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabelNotification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxTOIT)
                    .addComponent(jComboBoxLATITUDE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxLONGITUDE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxETIQUETTE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBoxMUR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBoxPOROSITE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jComboBoxSATURATIONhuile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jComboBoxARGILE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("cephy_2015");
        getAccessibleContext().setAccessibleDescription("cephy_2015");

        pack();
    }// </editor-fold>//GEN-END:initComponents
 javax.swing.filechooser.FileFilter filtreTxt;
 javax.swing.JFileChooser jFileChooser1;
 String [] titreColonne;
 Object[][] data;
 javax.swing.JTable tableau;
 javax.swing.JScrollPane  scr;
 ArrayList [] colonne;
 int numColonneETIQUETTE;
 int numColonneLONGITUDE ;
 int numColonneLATITUDE;
 int numColonneTOIT;
 int numColonneMUR;
 int numColonnePOROSITE;
 int numColonneSATURATION;
 int numColonneARGILE;
 int numColonneGRAPH;
 static String [] DonneesETIQUETTE;
 static double [] DonneesLONGITUDE;
 static double [] DonneesLATITUDE ;
 static double [] DonneesTOIT ;
 static double [] DonneesMUR;
 static double [] DonneesPOROSITE;
 static double [] DonneesSATURATION;
 static double [] DonneesARGILE;
 static double [] DonneesGRAPH;
 double [] DonneesDISTANCES;
 int [] DonneesLAGDISTANCE;
 double [] DonneesVARIOGRAMME;
 double [] DonneesVARIOGRAMMEMUR;
 double [][] TOITEstimE;
 double [][] MUREstimE;
 int blockLong;
 
 double surfaceBlock;
 double echelle;
 double [][] STOIIP;
 double Φ;
 double Sh, Sg;
 double Boi, Bgi;
 ArrayList epaisseursEstimees;

  
 ArrayList epaisseurEAU=new ArrayList();
 ArrayList epaisseurHUILE=new ArrayList();
 ArrayList epaisseurGAZ=new ArrayList();
 static double WOC;
 static double GOC;
 double [][] GeneratedLONGITUDE;
 double [][] GeneratedLATITUDE;
 double [][] GeneratedEPAISSEUR;
 double eHuile;
 double eGaz;
 int STOIIP2;

 static int [][] GeneratedLONGITUDEalorigine;
 static int [][] GeneratedLATITUDEalorigine;
 static double [][] EstimatedTOIT;
 static double [][] EstimatedMUR;
 static double [][] EstimatedPOROSITE;
 static double [][] EstimatedSATURATION;
 static double [][] EstimatedARGILE;
 double [][] EstimatedParameter;
 
 
    private void moreInit() {
        Enregistrer.setEnabled(false);
        Exporter.setEnabled(false);
        Rapport.setEnabled(false);
        jComboBoxETIQUETTE.setEnabled(false);
        jComboBoxLONGITUDE.setEnabled(false);
        jComboBoxLATITUDE.setEnabled(false);
        jComboBoxTOIT.setEnabled(false);
        jComboBoxMUR.setEnabled(false);
        jComboBoxPOROSITE.setEnabled(false);
        jComboBoxSATURATIONhuile.setEnabled(false);
        jComboBoxARGILE.setEnabled(false);
       //jTextField_WOC.setEnabled(false);
      // jTextField_GOC.setEnabled(false);
        jComboBox_ToléranceTOIT.setEnabled(false);
        jSpinner_MinCoupleTOIT.setEnabled(false);
        jComboBox_ToléranceMUR.setEnabled(false);
        jSpinner_MinCoupleMUR.setEnabled(false);
        jComboBox_TolérancePOROSITE.setEnabled(false);
        jSpinner_MinCouplePOROSITE.setEnabled(false);
        jComboBox_ToléranceSATURATION.setEnabled(false);
        jSpinner_MinCoupleSATURATION.setEnabled(false);
        jComboBox_ToléranceARGILE.setEnabled(false);
        jSpinner_MinCoupleARGILE.setEnabled(false);
        
        
        
     //CONFIGURATION FILTRE DE jFileChooser

        filtreTxt = new javax.swing.filechooser.FileFilter(){
           public boolean accept (File f){
               return f.getName().toLowerCase().endsWith(".txt");    
           } //accept
           public String getDescription(){
               return "Fichiers Texte (*.txt)";
           }//getDesprition
        };//fin définition filtreTxt
        
        //on ajoute le filtre
        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        //je vais now ajouter le filtre "filtreTxt" que j'ai programmé ci haut
        jFileChooser1.addChoosableFileFilter(filtreTxt);
        //je vais aussi ajouter le filtre tous les fichiers
        jFileChooser1.setAcceptAllFileFilterUsed(true);
    }
    private void lireFichier(File fichier){
        
        
        BufferedReader IN, OJ;
        String ligne;
        
 
        try{
            
            //ouverture fichier en lecture
            OJ=new BufferedReader(new FileReader(fichier));
            ligne=OJ.readLine();
            OJ.close();
            IN=new BufferedReader(new FileReader(fichier));
            String [] str = ligne.split("\\s+") ;
            int c = str.length ;
            
            colonne = new ArrayList[c];
            for (int j=0;j<c;j++)
                colonne[j]=new ArrayList();
            tableau=new javax.swing.JTable();
            int t=0;
            while((ligne=IN.readLine())!=null){
                System.out.println("ligne n° ("+t+")  ");
                String []champs = ligne.split("\\s+");
                
                for (int j=0;j<champs.length;j++) {
                    System.out.print(champs[j]+ "\t");
                    
                    colonne[j].add(champs[j]);

                }
                t++;
                }
            IN.close();
                
            
            
            
         int r = colonne[0].size();
         
        data = new Object[r][c];
        titreColonne =new String[c];
        int j;
        for (j=0;j<c;j++)
            titreColonne[j]=(String)colonne[j].get(0);
        int i;
        for (i=1; i<r;i++){
            for (j=0;j<c;j++)
                data [i-1][j]= (String)colonne[j].get(i);       
        }
        for (j=0;j<c;j++){
            jComboBoxETIQUETTE.addItem(titreColonne[j]);
            jComboBoxLONGITUDE.addItem(titreColonne[j]);
            jComboBoxLATITUDE.addItem(titreColonne[j]);
            jComboBoxTOIT.addItem(titreColonne[j]);
            jComboBoxMUR.addItem(titreColonne[j]);
            jComboBoxPOROSITE.addItem(titreColonne[j]);
            jComboBoxSATURATIONhuile.addItem(titreColonne[j]);
            jComboBoxARGILE.addItem(titreColonne[j]);
            jComboBoxGRAPH.addItem(titreColonne[j]);
        }
        
        }catch(Exception ex){jLabelNotification.setText(ex.getMessage());
        System.out.print(ex);
          jLabelNotification.setText("Erreur lecture "
                  + "fichier texte (encodage UTF-8)" 
                  + " aux colonnes séparées par des espaces"
                  + "ou tabulation");
        }
        
        
        tableau= new javax.swing.JTable(data,titreColonne);
        tableau.setColumnSelectionAllowed(true);
        tableau.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        scr= new javax.swing.JScrollPane(tableau);
        jTabbedPaneDonnees.add(fichier.getName(),scr);
        jComboBoxETIQUETTE.setEnabled(true);
        jComboBoxLONGITUDE.setEnabled(true);
        jComboBoxLATITUDE.setEnabled(true);
        jComboBoxTOIT.setEnabled(true);
        jComboBoxMUR.setEnabled(true);
        jComboBoxPOROSITE.setEnabled(true);
        jComboBoxSATURATIONhuile.setEnabled(true);
        jComboBoxARGILE.setEnabled(true);
        jLabelNotification.setText("Données chargées avec succès");
        Enregistrer.setEnabled(true);
                
    }
    public void scanDonneesEtiqLongLatEpais(){
         
      //Obtention des indexes des colonnees LONG, LAT, TOIT, MUR, POROSI, SATURATIO, ARGILE
        
        for (int i=0;i<tableau.getColumnCount();i++){
            if(jComboBoxETIQUETTE.getSelectedItem()==colonne[i].get(0)){
                numColonneETIQUETTE = i;
            }
            
            if(jComboBoxLONGITUDE.getSelectedItem()==colonne[i].get(0)){
             numColonneLONGITUDE =i; 
            }
            if(jComboBoxLATITUDE.getSelectedItem()==colonne[i].get(0)){
               numColonneLATITUDE =i; 
            }
            if(jComboBoxTOIT.getSelectedItem()==colonne[i].get(0)){
               numColonneTOIT =i; 
            }
            if (jComboBoxMUR.getSelectedItem()==colonne[i].get(0)){
                numColonneMUR=i;
            }
             if (jComboBoxPOROSITE.getSelectedItem()==colonne[i].get(0)){
                numColonnePOROSITE=i;
            }
             if (jComboBoxSATURATIONhuile.getSelectedItem()==colonne[i].get(0)){
                numColonneSATURATION=i;
            }
             if (jComboBoxARGILE.getSelectedItem()==colonne[i].get(0)){
                numColonneARGILE=i;
             }
                if (jComboBoxGRAPH.getSelectedItem()==colonne[i].get(0)){
                numColonneGRAPH=i;
            }
        }
        int rc = tableau.getRowCount()-1;
        DonneesETIQUETTE = new String [rc];
        DonneesLONGITUDE = new double[rc];
        DonneesLATITUDE = new double[rc];
        DonneesTOIT = new double[rc];
        DonneesMUR = new double [rc];
        DonneesPOROSITE = new double [rc];
        DonneesSATURATION = new double [rc];
        DonneesARGILE = new double [rc];
        DonneesGRAPH= new double [rc];
       /* for (int i=0;1<tableau.getRowCount();i++){
            double DonneesLONGITUDE[i]=new double();
            
        }*/
        for (int i=1;i<colonne[numColonneLONGITUDE].size();i++){
            DonneesETIQUETTE[i-1]= (String)colonne[numColonneETIQUETTE].get(i);
            DonneesLONGITUDE[i-1]=Double.parseDouble((String)colonne[numColonneLONGITUDE].get(i));
            DonneesLATITUDE[i-1]=Double.parseDouble((String)colonne[numColonneLATITUDE].get(i));
            DonneesTOIT[i-1]=Double.parseDouble((String)colonne[numColonneTOIT].get(i));
            DonneesMUR[i-1]=Double.parseDouble((String)colonne[numColonneMUR].get(i));
            DonneesPOROSITE[i-1]=Double.parseDouble((String)colonne[numColonnePOROSITE].get(i));
            DonneesSATURATION[i-1]=Double.parseDouble((String)colonne[numColonneSATURATION].get(i));
            DonneesARGILE[i-1]=Double.parseDouble((String)colonne[numColonneARGILE].get(i));
            DonneesGRAPH[i-1]=Double.parseDouble((String)colonne[numColonneGRAPH].get(i));
        }
    
    }
     public void variogramme(double [] DonneesParametre, javax.swing.JComboBox Tolérance, javax.swing.JSpinner MinCouple ){
        scanDonneesEtiqLongLatEpais();
        int tL=DonneesLONGITUDE.length;
        DonneesDISTANCES=new double[tL*tL];
        int k=0;
        for (int i=0; i<tL; i++){
            for (int j=0;j<tL; j++){
                DonneesDISTANCES[k]=Math.sqrt( Math.pow((DonneesLONGITUDE[i]-DonneesLONGITUDE[j]),2)+Math.pow((DonneesLATITUDE[i]-DonneesLATITUDE[j]),2)) ;
                k++;
            }
        }
        
        
        double maxLAGDISTANCE=0;
        for (k=0;k<tL*tL;k++){
            if (maxLAGDISTANCE<DonneesDISTANCES[k])
                maxLAGDISTANCE=DonneesDISTANCES[k] ;
        }
            
        int lagINTERVAL= (int)((maxLAGDISTANCE/19.0));
        int lagTOLERANCE;
        
        if(Tolérance.isEnabled())
            lagTOLERANCE=(int)Tolérance.getSelectedItem();
        else {lagTOLERANCE = (int) ((lagINTERVAL*0.1));
            for (int i=1; i<=5; i++){
                Tolérance.addItem((int) ((lagINTERVAL*0.1*i)));
                MinCouple.setValue(7);
            }
        }
        DonneesVARIOGRAMME=new double[20];
        DonneesVARIOGRAMME[0]=0;
        DonneesLAGDISTANCE= new int [20];
        for (int b=0;b<20; b++)
            DonneesLAGDISTANCE[b]=b*lagINTERVAL ;       
        ArrayList ilunga = new ArrayList();        
        for (int i=1;i<20;i++){
            ilunga.clear();
            for(k=0;k<tL*tL;k++){
                if ((i*lagINTERVAL-lagTOLERANCE) <= DonneesDISTANCES[k]&& (i*lagINTERVAL+lagTOLERANCE)>=DonneesDISTANCES[k]){
                    ilunga.add(k);
                }
            }
             int nbrCouple = ilunga.size();
             if (nbrCouple<(int)MinCouple.getValue())
                 DonneesVARIOGRAMME[i]=0;
             else{
                 int [] couple = new int [nbrCouple];
                 int [] puits1 = new int [nbrCouple];
                 int [] puits2 = new int [nbrCouple];
                 double variogramme=0.0;
                 for (int v=0; v<nbrCouple;v++){
                     couple[v]=(int)ilunga.get(v);
                     puits1[v]= (int)((couple[v]/tL));
                     puits2[v]= couple[v]-(puits1[v]*tL);
                     variogramme +=Math.pow(DonneesParametre[puits1[v]]-DonneesParametre[puits2[v]],2);
                 }
                 DonneesVARIOGRAMME[i]=variogramme/(nbrCouple);
             }
            } 
        } 
    public void variogrammeMUR(){
        scanDonneesEtiqLongLatEpais();
        int tL=DonneesLONGITUDE.length;
        DonneesDISTANCES=new double[tL*tL];
        int k=0;
        for (int i=0; i<tL; i++){
            for (int j=0;j<tL; j++){
                DonneesDISTANCES[k]=Math.sqrt( Math.pow((DonneesLONGITUDE[i]-DonneesLONGITUDE[j]),2)-Math.pow((DonneesLATITUDE[i]-DonneesLATITUDE[j]),2)) ;
                k++;
            }
        }
        double maxLAGDISTANCE=0;
        for (k=0;k<tL*tL;k++){
            if (maxLAGDISTANCE<DonneesDISTANCES[k])
                maxLAGDISTANCE=DonneesDISTANCES[k] ;
        }
        
        int lagINTERVAL= (int)((maxLAGDISTANCE/2/19));
        int lagTOLERANCE;
        if(jComboBox_ToléranceTOIT.isEnabled())
            lagTOLERANCE=(int)jComboBox_ToléranceTOIT.getSelectedItem();
        else {lagTOLERANCE = (int) ((lagINTERVAL*0.1));
            for (int i=1; i<=5; i++){
                jComboBox_ToléranceTOIT.addItem((int) ((lagINTERVAL*0.1*i)));
                jSpinner_MinCoupleTOIT.setValue(7);
            }
        }
        
        DonneesVARIOGRAMMEMUR=new double[20];
        DonneesVARIOGRAMMEMUR[0]=0;
        DonneesLAGDISTANCE= new int [20];
        for (int b=0;b<20; b++)
            DonneesLAGDISTANCE[b]=b*lagINTERVAL ;       
        ArrayList ilunga = new ArrayList();        
        for (int i=1;i<20;i++){
            ilunga.clear();
            for(k=0;k<tL*tL;k++){
                if ((i*lagINTERVAL-lagTOLERANCE) <= DonneesDISTANCES[k]&& (i*lagINTERVAL+lagTOLERANCE)>=DonneesDISTANCES[k]){
                    ilunga.add(k);
                }
            }
             int nbrCouple = ilunga.size();
             if (nbrCouple<(int)jSpinner_MinCoupleTOIT.getValue())
                 DonneesVARIOGRAMMEMUR[i]=0;
             else{
                 int [] couple = new int [nbrCouple];
                 int [] puits1 = new int [nbrCouple];
                 int [] puits2 = new int [nbrCouple];
                 double variogramme=0;
                 for (int v=0; v<nbrCouple;v++){
                     couple[v]=(int)ilunga.get(v);
                     puits1[v]= (int)((couple[v]/tL));
                     puits2[v]= (int)couple[v]-(puits1[v]*tL);
                     variogramme +=Math.pow(DonneesMUR[puits1[v]]-DonneesMUR[puits2[v]],2);
                 }
                 DonneesVARIOGRAMMEMUR[i]=variogramme/(2*nbrCouple);
             }
            }
        } 
    
    private void OuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OuvrirActionPerformed
        // TODO add your handling code here:
        scr=null;
        jFileChooser1.setFileFilter(filtreTxt);
        
        int returnVal = jFileChooser1.showOpenDialog(this);
        if(returnVal==JFileChooser.APPROVE_OPTION){
            lireFichier(jFileChooser1.getSelectedFile());
        }
    }//GEN-LAST:event_OuvrirActionPerformed

    private void EnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerActionPerformed
        // TODO add your handling code here:
        jFileChooser1.setFileFilter(filtreTxt);
        int returnVal = jFileChooser1.showSaveDialog(this);
        if(returnVal==JFileChooser.APPROVE_OPTION){
            ecrireFichier(jFileChooser1.getSelectedFile());
        }
    }//GEN-LAST:event_EnregistrerActionPerformed

    private void QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitterActionPerformed
        // TODO add your handling code here
        System.exit(0);
    }//GEN-LAST:event_QuitterActionPerformed

    private void jComboBoxLONGITUDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLONGITUDEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxLONGITUDEActionPerformed

    private void jComboBoxETIQUETTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxETIQUETTEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxETIQUETTEActionPerformed

    private void jButtonEtiquetterLePuitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEtiquetterLePuitsActionPerformed
        // TODO add your handling code here:
        scanDonneesEtiqLongLatEpais();
        GRAPH2 pat =new GRAPH2(DonneesETIQUETTE, DonneesLONGITUDE,DonneesLATITUDE, DonneesGRAPH);
        pat.setBounds(0,0,1000,1000);
        jPanelRecoitGraphLocDesPuits.removeAll();
        jPanelRecoitGraphLocDesPuits.add(pat);
        
    }//GEN-LAST:event_jButtonEtiquetterLePuitsActionPerformed
    public void INTERPOLATION8 (double [] DonneesLONGITUDE,double [] DonneesLATITUDE, double [] DonneesTOIT,  double a, double Co){                                         
        double LatMin=10000000000000.0, LatMax=0, LongMin=1000000000000.0, LongMax=0;
           for (int i=0;i<DonneesLONGITUDE.length;i++){
           if (LongMax<DonneesLONGITUDE[i])
               LongMax=DonneesLONGITUDE[i];
           if (LatMax<DonneesLATITUDE[i])
               LatMax=DonneesLATITUDE[i];
           if (LongMin>DonneesLONGITUDE[i])
               LongMin=DonneesLONGITUDE[i];
           if (LatMin>DonneesLATITUDE[i])
               LatMin=DonneesLATITUDE[i];
       }
       double longueurT= LongMax-LongMin;
       double largeurT= LatMax-LatMin;
       
       if (largeurT<longueurT)
           echelle=450.0/longueurT;
           else echelle=450.0/largeurT;
       int longueurC =(int)((longueurT*echelle)+10);
       
       int blockLong =450;
       double dimCoteBlock=longueurT/blockLong;
       double surfaceBlock = dimCoteBlock*dimCoteBlock;
       int dimCoteBlockC= (int)((dimCoteBlock*echelle));
       int nbreBlockLAT= (int) ((largeurT/dimCoteBlock));
       GeneratedLATITUDE=new double [blockLong*4][nbreBlockLAT*4];
       GeneratedLONGITUDE=new double [blockLong*4][nbreBlockLAT*4];
       GeneratedLONGITUDEalorigine= new int [blockLong*4][nbreBlockLAT*4];
       GeneratedLATITUDEalorigine= new int [blockLong*4][nbreBlockLAT*4];
       EstimatedParameter=new double [blockLong][nbreBlockLAT];
       for (int h=0; h<blockLong*4; h++) {
           for (int k=0; k<nbreBlockLAT*4; k++){
               GeneratedLATITUDE [h][k]=LatMin+dimCoteBlock/8+k*dimCoteBlock/4;
          //   System.out.println("Generated_LATITUDE : ligne  "+h+ "colonne "+k+"  " +GeneratedLATITUDE[h][k]);
           }
       }
       for (int k=0; k<nbreBlockLAT*4; k++) {
           for (int h=0; h<blockLong*4; h++){
               GeneratedLONGITUDE [h][k]=LongMin+dimCoteBlock/8+h*dimCoteBlock/4;
        //     System.out.println("Generated_LONGITUDE : ligne  "+h+ "colonne "+k+"  " +GeneratedLONGITUDE[h][k]);
           }
       }
       //krigeage par bloc
       int d=0;
       double distances []= new double [DonneesLONGITUDE.length];
       for (int h=0; h<(blockLong*4-1); h+=4){
           for (int k=0; k<(nbreBlockLAT*4-1); k+=4){
               d++;
               System.out.println("BLOC NUMERO "+d);
              
               //recherche des huit points plus proches du bloc généré
               
               for (int l=0;l<DonneesLONGITUDE.length;l++){
                   distances [l]=0.0;
               for (int b=0;b<4;b++){
                   for (int c=0;c<4;c++){
                   distances[l]=distances[l]+Math.sqrt(Math.pow(GeneratedLONGITUDE[h+b][k+c]-DonneesLONGITUDE[l], 2)+Math.pow(GeneratedLATITUDE[h+b][h+c]-DonneesLATITUDE[l], 2));
                   } 
               }
              // System.out.println("somme distance  donnee KK"+(l+1)+" avec le bloc n° "+d+" = "+distances[l]);
               }
               int [] procheVoisinNUM=  new int [8];
             //  System.out.println("VOICI 8 PUITS PROCHES DE CE BLOCS");
               for (int i=0; i<8;i++){
                   double procheVoisin=2000000000000000000.0;
                    for (int l=0;l<distances.length;l++){
                         if (procheVoisin>distances[l]){
                             procheVoisin=distances[l];
                             procheVoisinNUM[i]=l;
                         }
                    }
                    distances[procheVoisinNUM[i]]=200000000000000000.0;
             //  System.out.println("KK"+(procheVoisinNUM[i]+1));     
               }
               
               double [][] covU0 = new double[9][1];
               double [][] covdata = new double [9][9];
               double dist ;
               //
               for (int n =0; n<8;n++){
                      covU0 [n][0]=0;
                   //   System.out.println("portee = "+a);
                      for (int b=0;b<4;b++){
                            for (int c=0;c<4;c++){  
                        dist = (Math.sqrt(Math.pow(GeneratedLONGITUDE[h+b][k+c]-DonneesLONGITUDE[procheVoisinNUM[n]], 2)+Math.pow(GeneratedLATITUDE[h+b][k+c]-DonneesLATITUDE[procheVoisinNUM[n]], 2)));
                   //     System.out.println("distance data vs estimated = "+dist);
                        
                        if (dist<=a){
                            double cor = dist/a;
                           covU0 [n][0]+= 1.0/16*Co*(1.0-3.0/2*cor+1.0/2*Math.pow(cor,3));
                        }
                      //  else covU0 [n][0]+=150;
                            }
                      }
                     
                      for (int m=0; m<8; m++){
                          covdata[n][m]=0;
                        dist =   (Math.sqrt(Math.pow(DonneesLONGITUDE[procheVoisinNUM[n]]-DonneesLONGITUDE[procheVoisinNUM[m]], 2)+Math.pow(DonneesLATITUDE[procheVoisinNUM[n]]-DonneesLATITUDE[procheVoisinNUM[m]], 2))); 
                   //     System.out.println("distance data vs data = "+dist);
                        if (dist<=a){
                          double cor = dist/a;
                          covdata[n][m]=Co*(1.0-3.0/2*cor+1.0/2*Math.pow(cor,3));
                        }
                     //   else covU0 [n][0]+=150;
                      }
                     
                    covdata[8][n]=1;
                    covdata[n][8]=1;
               }
               covU0[8][0]=1;
               covdata[8][8]=0;
       
       
       Matrix matrice = new Matrix (covdata);
       Matrix matrice0= new Matrix (covU0);
       Matrix Mpoids = new Matrix (covU0);
       matrice.setValues(covdata);
       matrice0.setValues(covU0);
       
       
       try{
           Mpoids=MatrixMathematics.multiply( MatrixMathematics.inverse(matrice), matrice0);
       } catch (Exception e){
           System.err.println(e);
       }
    double [] poids = new double [9];
        
    for (int p=0; p<9; p++){
        poids[p]=Mpoids.getValueAt(p, 0);
        System.out.println("poids"+p+" = "+poids[p]);
    }
          
    double TOITEstimeee=0;
    
    for (int f=0; f<8; f++){
        TOITEstimeee += poids[f]*DonneesTOIT[procheVoisinNUM[f]];
        
    }
    System.out.println("Toit estimé = "+TOITEstimeee);    
    System.out.println("-------------------------------------------------");
    EstimatedParameter[h/4][k/4]=TOITEstimeee;    
    GeneratedLONGITUDEalorigine[h][k] = (int)(((GeneratedLONGITUDE[h][k]-dimCoteBlock/8-LongMin)*echelle));
    GeneratedLATITUDEalorigine[h][k] = (int)(((GeneratedLATITUDE[h][k]-dimCoteBlock/8-LatMin)*echelle));
           }
       }
    }
    public void INTERPOLATION (double [] DonneesLONGITUDE,double [] DonneesLATITUDE, double [] DonneesTOIT,  double a, double Co){                                         
        double LatMin=10000000, LatMax=0, LongMin=10000000, LongMax=0;
           for (int i=0;i<DonneesLONGITUDE.length;i++){
           if (LongMax<DonneesLONGITUDE[i])
               LongMax=DonneesLONGITUDE[i];
           if (LatMax<DonneesLATITUDE[i])
               LatMax=DonneesLATITUDE[i];
           if (LongMin>DonneesLONGITUDE[i])
               LongMin=DonneesLONGITUDE[i];
           if (LatMin>DonneesLATITUDE[i])
               LatMin=DonneesLATITUDE[i];
       }
      
       double longueurT= LongMax-LongMin;
       double largeurT= LatMax-LatMin;
       
       if (largeurT<longueurT)
           echelle=450/longueurT;
           else echelle=450/largeurT;
       int longueurC =(int)((longueurT*echelle)+10);
        
       
       int blockLong = 225;
       double dimCoteBlock=longueurT/blockLong;
       surfaceBlock = dimCoteBlock*dimCoteBlock;
       int dimCoteBlockC= (int)((dimCoteBlock*echelle));
       
       int nbreBlockLAT= (int) ((largeurT/dimCoteBlock));
       GeneratedLATITUDE=new double [blockLong*2][nbreBlockLAT*2];
       GeneratedLONGITUDE=new double [blockLong*2][nbreBlockLAT*2];
       GeneratedLONGITUDEalorigine= new int [blockLong*2][nbreBlockLAT*2];
       GeneratedLATITUDEalorigine= new int [blockLong*2][nbreBlockLAT*2];
       EstimatedParameter=new double [blockLong][nbreBlockLAT];
       for (int h=0; h<blockLong*2; h++) {
           for (int k=0; k<nbreBlockLAT*2; k++){
               GeneratedLATITUDE [h][k]=LatMin+dimCoteBlock/4+k*dimCoteBlock/2;
           }
       }
       for (int k=0; k<nbreBlockLAT*2; k++) {
           for (int h=0; h<blockLong*2; h++){
               GeneratedLONGITUDE [h][k]=LongMin+dimCoteBlock/4+h*dimCoteBlock/2;
           }
       }
       //krigeage par bloc
       int d=0;
       double distances []= new double [DonneesLONGITUDE.length];
       for (int h=0; h<(blockLong*2); h+=2){
           for (int k=0; k<(nbreBlockLAT*2); k+=2){
               d++;
               System.out.println("BLOC NUMERO "+d);
               //recherche des quatre points plus proches du bloc généré
               
               for (int l=0;l<DonneesLONGITUDE.length;l++){
                   distances [l]=0;
               for (int b=0;b<4;b++){
                   //identification des coordonnees des points d un meme bloc
                  int hb=h+ (int)((b/2));
                  int kb=k+Math.abs(Math.abs(1-2*b+b)-1);
               
                   distances[l]=distances[l]+Math.sqrt(Math.pow(GeneratedLONGITUDE[hb][kb]-DonneesLONGITUDE[l], 2)+Math.pow(GeneratedLATITUDE[hb][kb]-DonneesLATITUDE[l], 2));
                   
               }
              // System.out.println("somme distance  donnee n° "+l+" avec le bloc n° "+d+" = "+distances[l]);
               }
               int [] procheVoisinNUM=  new int [4];
               
               for (int i=0; i<4;i++){
                   double procheVoisin=1000000000;
                    for (int l=0;l<distances.length;l++){
                         if (procheVoisin>distances[l]){
                             procheVoisin=distances[l];
                             procheVoisinNUM[i]=l;
                         }
                    }
                    distances[procheVoisinNUM[i]]=200000000;
               }
               
               double [][] covU0 = new double[5][1];
               double [][] covdata = new double [5][5];
               double [][] covU0M = new double[5][1];
               double [][] covdataM = new double [5][5];
               double dist ;
               
               for (int n =0; n<4;n++){
                     covU0 [n][0]=0;
                                 
            //       System.out.println("num du plus proche : "+"n° "+n+ " = "+    procheVoisinNUM[n]);
                    for (int m =0; m<4;m++){
                        covdata[n][m]=0;
                        //identification des coordonnees des points d un meme bloc
                        int hb=h+ (int)((m/2));
                        int kb=k+Math.abs(Math.abs(1-2*m+m)-1);
                        
                        dist = (Math.sqrt(Math.pow(GeneratedLONGITUDE[hb][kb]-DonneesLONGITUDE[procheVoisinNUM[n]], 2)+Math.pow(GeneratedLATITUDE[hb][kb]-DonneesLATITUDE[procheVoisinNUM[n]], 2)));
                    //    System.out.println("distance data vs estimated = "+dist);
                        double cor = dist/a;
                       if (dist<=a)
                           covU0 [n][0]+= 1.0/4*Co*(1.0-3.0/2*cor+1.0/2*Math.pow(cor,3));
                        
                     //   System.out.println("cor    = "+cor); 
                    //    System.out.println("element 1,1 petite mat = "+1.0/4*Co*(1-3.0/2*cor+1.0/2*Math.pow(cor,3)));
                        dist =   (Math.sqrt(Math.pow(DonneesLONGITUDE[procheVoisinNUM[n]]-DonneesLONGITUDE[procheVoisinNUM[m]], 2)+Math.pow(DonneesLATITUDE[procheVoisinNUM[n]]-DonneesLATITUDE[procheVoisinNUM[m]], 2)));
                        if (dist<=a)
                            covdata[n][m]=Co*(1.0-3.0/2*(dist/a)+1.0/2*Math.pow(dist/a,3));
                     
                     //System.out.println("distance data n° "+procheVoisinNUM[n]+" vs data n° "+procheVoisinNUM[m]+" = "+dist);
                      //   System.out.println("element  gde mat  "+n+","+m+" = "+covdata[n][m]+"\t"+"element  gde mat   "+n+"  = "+covU0 [n][0]);
                        
                    }
                    covdata[4][n]=1;
                    covdata[n][4]=1;
                    covdataM[4][n]=1;
                    covdataM[n][4]=1;
               }
               covU0[4][0]=1;
               covdata[4][4]=0;
               covU0M[4][0]=1;
               covdataM[4][4]=0;
       Matrix matrice = new Matrix (covdata);
       Matrix matrice0= new Matrix (covU0);
       Matrix Mpoids = new Matrix (covU0);
       matrice.setValues(covdata);
       matrice0.setValues(covU0);
       
      
       
       try{
           Mpoids=MatrixMathematics.multiply( MatrixMathematics.inverse(matrice), matrice0);
           
       } catch (Exception e){
           System.out.println(e);
       }
       
    double [][] poids = new double [5][1];
    poids=Mpoids.getValues();
    double [][] poidsM = new double [5][1];
    
 
    double TOITEstimeee=0;
    
    for (int f=0; f<4; f++){
        TOITEstimeee += poids[f][0]*DonneesTOIT[procheVoisinNUM[f]];
        System.out.println(" poids "+poids[f][0]+" donnees "+DonneesTOIT[procheVoisinNUM[f]]+" indice du puits "+ procheVoisinNUM[f]);
        
    }
    EstimatedParameter[h/2][k/2]=TOITEstimeee;
        System.out.println("Toit estimé = "+TOITEstimeee);
    
//    somme des épaisseurs tenant compte de WOC et ou de GOC
        /*
   if (TOITEstimeee>WOC)
        epaisseurEAU.add(MUREstimeee-TOITEstimeee);
    if (TOITEstimeee<=WOC && MUREstimeee<WOC)
        epaisseurEAU.add(MUREstimeee-WOC);
    if (TOITEstimeee<WOC && TOITEstimeee>GOC){
        if (MUREstimeee<WOC)
            epaisseurHUILE.add(MUREstimeee-TOITEstimeee);
        else epaisseurHUILE.add(WOC-TOITEstimeee);
    }
    if (TOITEstimeee<=GOC){
        if (MUREstimeee<WOC&&MUREstimeee>GOC)
            epaisseurHUILE.add(MUREstimeee-GOC);
        else epaisseurHUILE.add (WOC-GOC);
    }
    if (TOITEstimeee<GOC){
        if (MUREstimeee>GOC)
            epaisseurGAZ.add(GOC-TOITEstimeee);
        else epaisseurGAZ.add(MUREstimeee-TOITEstimeee);
    }
        
    */
    
   // epaisseursEstimees.add(epaisseurEstimee*surfaceBlock);
  //  System.out.println("toit estimé = "+TOITEstimeee+'\n'+"mur estimé = "+MUREstimeee);
    
    GeneratedLONGITUDEalorigine[h][k] = (int)(((GeneratedLONGITUDE[h][k]-dimCoteBlock/4-LongMin)*echelle));
    GeneratedLATITUDEalorigine[h][k] = (int)(((GeneratedLATITUDE[h][k]-dimCoteBlock/4-LatMin)*echelle));
    
 /*j'additionne +22 pour remettre les points dans le rectangle d'origine (20,20)
  * comme signalé ci-haut dans la conception du cadre de la carte
  * 
  */ }  
       }  
    }                                        
    private void CalculerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculerActionPerformed
        /*
         * Insertion du WOC, GOC et Boi
         */
        
        try{
            WOC=Double.parseDouble((String)JOptionPane.showInputDialog(this, "Insérez"
                    + " la profondeur du WOC si rencontrée", "WOC", JOptionPane.QUESTION_MESSAGE));
            
        } catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(this, "WOC non rencontré");
            WOC=200000000000.0;
        }
        try{
            GOC=Double.parseDouble((String)JOptionPane.showInputDialog(this, "Insérez la "
                    + "profondeur du GOC si rencontrée", "GOC", JOptionPane.QUESTION_MESSAGE));
            
        } catch (java.lang.NumberFormatException e){
            JOptionPane.showMessageDialog(this, "GOC non rencontré");
            GOC=0;
        }
        try{
            Boi=Double.parseDouble((String)JOptionPane.showInputDialog(this, "Insérer "
                    + "le Boi (Obligatoire)", "Bo", JOptionPane.WARNING_MESSAGE));
        }catch (java.lang.NumberFormatException e){
            try{
            Boi=Double.parseDouble((String)JOptionPane.showInputDialog(this, "Insérer"
                    + " le Boi (Obligatoire)", "Bo", JOptionPane.WARNING_MESSAGE));
        }catch (java.lang.NumberFormatException e2){
            JOptionPane.showMessageDialog(this, "Désolé !  (valeur incorrect)" , "Bo", JOptionPane.OK_CANCEL_OPTION);
        }
        }
        jLabelNotification.setText("En cours de calculs, veuillez patienter svp... "
                + "ceci prend du temps selon la performance de votre ordinateur 1/5");
       
        /*
         * INTERPOLATION DES DONNEES DU TOIT
         */
        variogramme(DonneesTOIT, jComboBox_ToléranceTOIT, jSpinner_MinCoupleTOIT);
        Regress Toit = new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME);
        Toit.spherique();
        INTERPOLATION(DonneesLONGITUDE, DonneesLATITUDE, DonneesTOIT, Toit.Co, Toit.a);
        EstimatedTOIT = new double [GeneratedLONGITUDE.length][GeneratedLONGITUDE[1].length] ;
        EstimatedTOIT = EstimatedParameter;
        jLabelNotification.setText("En cours de calculs, veuillez patienter svp... "
                + "ceci prend du temps selon la performance de votre ordinateur 2/5");
        /*
         * INTERPOLATION DES DONNEES DU MUR
         */
        
        variogramme(DonneesMUR, jComboBox_ToléranceMUR, jSpinner_MinCoupleMUR);
        Regress MUR = new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME);
        MUR.spherique();
        INTERPOLATION(DonneesLONGITUDE, DonneesLATITUDE, DonneesMUR, MUR.Co, MUR.a);
        EstimatedMUR = new double [GeneratedLONGITUDE.length][GeneratedLONGITUDE[1].length] ;
        EstimatedMUR = EstimatedParameter;
        
        jLabelNotification.setText("En cours de calculs, veuillez patienter svp... "
                + "ceci prend du temps selon la performance de votre ordinateur 3/5");
        /*
         * INTERPOLATION DES DONNEES DU POROSITE
         */
        
        variogramme(DonneesPOROSITE, jComboBox_TolérancePOROSITE, jSpinner_MinCouplePOROSITE);
        Regress POROSITE = new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME);
        POROSITE.spherique();
        INTERPOLATION(DonneesLONGITUDE, DonneesLATITUDE, DonneesPOROSITE, POROSITE.Co, POROSITE.a);
        EstimatedPOROSITE = new double [GeneratedLONGITUDE.length][GeneratedLONGITUDE[1].length] ;
        EstimatedPOROSITE = EstimatedParameter;
        jLabelNotification.setText("En cours de calculs, veuillez patienter svp... "
                + "ceci prend du temps selon la performance de votre ordinateur 4/5");
        /*
         * INTERPOLATION DES DONNEES DE LA SATURATION
         */
        
        variogramme(DonneesSATURATION, jComboBox_ToléranceSATURATION, jSpinner_MinCoupleSATURATION);
        Regress SATURATION = new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME);
        SATURATION.spherique();
        INTERPOLATION(DonneesLONGITUDE, DonneesLATITUDE, DonneesSATURATION, SATURATION.Co, SATURATION.a);
        EstimatedSATURATION = new double [GeneratedLONGITUDE.length][GeneratedLONGITUDE[1].length] ;
        EstimatedSATURATION = EstimatedParameter;
        
        
        jLabelNotification.setText("En cours de calculs, veuillez patienter svp... ceci prend du temps selon la performance de votre ordinateur 5/5");
        /*
         * INTERPOLATION DES DONNEES DE LA SATURATION
         */
        
        variogramme(DonneesARGILE, jComboBox_ToléranceARGILE, jSpinner_MinCoupleARGILE);
        Regress ARGILE = new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME);
        ARGILE.spherique();
        INTERPOLATION(DonneesLONGITUDE, DonneesLATITUDE, DonneesSATURATION, ARGILE.Co, ARGILE.a);
        EstimatedARGILE = new double [GeneratedLONGITUDE.length][GeneratedLONGITUDE[1].length] ;
        EstimatedARGILE = EstimatedParameter;
        
        /*
         * INTERPOLATION DES DONNEES DE STOIIP
         */
        double [][] EpaisseurHuile = new double[EstimatedParameter.length][EstimatedParameter[1].length];
        STOIIP = new double[EstimatedParameter.length][EstimatedParameter[1].length];
                
        for (int h=0; h<EstimatedParameter.length; h++){
            for (int k=0; k<EstimatedParameter[1].length; k++ ){
                if(EstimatedTOIT[h][k]>=WOC ||EstimatedMUR[h][k]<=GOC)
                    EpaisseurHuile[h][k] =0;
                else if(EstimatedTOIT[h][k]<=GOC&&EstimatedMUR[h][k]>=WOC)
                    EpaisseurHuile[h][k]=WOC-GOC;
                else if (EstimatedTOIT[h][k]<=GOC&&EstimatedMUR[h][k]<=WOC)
                    EpaisseurHuile[h][k]=EstimatedMUR[h][k]-GOC;
                else if (EstimatedTOIT[h][k]>=GOC&&EstimatedMUR[h][k]>=WOC)
                    EpaisseurHuile[h][k]=WOC-EstimatedTOIT[h][k];
                else EpaisseurHuile[h][k]= EstimatedMUR[h][k]-EstimatedTOIT[h][k];
      //CALCUL STOIIP PAR BLOC   
                System.out.println("Epaisseur = "+EpaisseurHuile[h][k]);
                System.out.println("surfaceBlock = "+surfaceBlock);
                System.out.println("EstimatedPOROSITE = "+EstimatedPOROSITE[h][k]);
                System.out.println("EstimatedSATURATION = "+EstimatedSATURATION[h][k]);
                System.out.println("Bo = "+Boi);
                STOIIP[h][k]=EpaisseurHuile[h][k]*surfaceBlock*EstimatedPOROSITE[h][k]*EstimatedSATURATION[h][k]/Boi;
                STOIIP2+=STOIIP[h][k];
                System.out.println("STOIIP = "+STOIIP[h][k]);
            }
        }
        jLabelSTOIIP.setText(""+STOIIP2);
    }//GEN-LAST:event_CalculerActionPerformed

    private void jComboBoxTOITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTOITActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTOITActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Travail de fin d'étude présenté et défendu publiquement en vue "
                + "\n"+"de l'obtention du diplôme d'ingénieur en pétrole et gaz par :"
                + "\n"+"ILUNGA KABASELE Alex  (Production)"
                +"\n"+ "KAMBALE MULEKYA Patient  (Exploration)");
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jButton_AfficherVarioARGILEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AfficherVarioARGILEActionPerformed
        // TODO add your handling code here:
        jPanel18.removeAll();
        variogramme(DonneesARGILE, jComboBox_ToléranceARGILE, jSpinner_MinCoupleARGILE);
        VARIOGRAPH2 pat = new VARIOGRAPH2(new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME));
        jComboBox_ToléranceARGILE.setEnabled(true);
        jSpinner_MinCoupleARGILE.setEnabled(true);
        pat.setBounds(0,0,1000,1000);
        jPanel18.add(pat);
    }//GEN-LAST:event_jButton_AfficherVarioARGILEActionPerformed

    private void jButton_AfficherVarioSATURATIONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AfficherVarioSATURATIONActionPerformed
        // TODO add your handling code here:
        jPanel15.removeAll();
        variogramme(DonneesSATURATION, jComboBox_ToléranceSATURATION, jSpinner_MinCoupleSATURATION);
        VARIOGRAPH2 pat = new VARIOGRAPH2(new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME));
        jComboBox_ToléranceSATURATION.setEnabled(true);
        jSpinner_MinCoupleSATURATION.setEnabled(true);
        pat.setBounds(0,0,1000,1000);
        jPanel15.add(pat);
    }//GEN-LAST:event_jButton_AfficherVarioSATURATIONActionPerformed

    private void jButton_AfficherVarioPOROSITEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AfficherVarioPOROSITEActionPerformed
        // TODO add your handling code here:
        jPanel12.removeAll();
        variogramme(DonneesPOROSITE, jComboBox_TolérancePOROSITE, jSpinner_MinCouplePOROSITE);
        VARIOGRAPH2 pat = new VARIOGRAPH2(new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME));
        jComboBox_TolérancePOROSITE.setEnabled(true);
        jSpinner_MinCouplePOROSITE.setEnabled(true);
        pat.setBounds(0,0,1000,1000);
        jPanel12.add(pat);
    }//GEN-LAST:event_jButton_AfficherVarioPOROSITEActionPerformed

    private void jButton_AfficherVarioMurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AfficherVarioMurActionPerformed
        // TODO add your handling code here:
        jPanel9.removeAll();
        variogramme(DonneesMUR, jComboBox_ToléranceMUR, jSpinner_MinCoupleMUR);
        VARIOGRAPH2 pat = new VARIOGRAPH2(new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME));
        jComboBox_ToléranceMUR.setEnabled(true);
        jSpinner_MinCoupleMUR.setEnabled(true);
        pat.setBounds(0,0,1000,1000);
        jPanel9.add(pat);
    }//GEN-LAST:event_jButton_AfficherVarioMurActionPerformed

    private void jButton_AfficherVarioTOITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AfficherVarioTOITActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();
        variogramme(DonneesTOIT, jComboBox_ToléranceTOIT, jSpinner_MinCoupleTOIT);
        VARIOGRAPH2 pat = new VARIOGRAPH2(new Regress(DonneesLAGDISTANCE, DonneesVARIOGRAMME));
        jComboBox_ToléranceTOIT.setEnabled(true);
        jSpinner_MinCoupleTOIT.setEnabled(true);
        pat.setBounds(0,0,1000,1000);
        jPanel3.add(pat);
    }//GEN-LAST:event_jButton_AfficherVarioTOITActionPerformed

    private void jButtonAfficherTOITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAfficherTOITActionPerformed
        // TODO add your handling code here:
        jPanel6.removeAll();
       
        Image toit = new Image(DonneesETIQUETTE,DonneesLONGITUDE,DonneesLATITUDE,GeneratedLONGITUDEalorigine, GeneratedLATITUDEalorigine, EstimatedTOIT, WOC, GOC);
        toit.setBounds(0, 0, 1000, 1000);
        jPanel6.add(toit);
    }//GEN-LAST:event_jButtonAfficherTOITActionPerformed

    private void jButtonAfficherSTOIIPNetPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAfficherSTOIIPNetPatActionPerformed
        // TODO add your handling code here:
        jPanel6.removeAll();
        Image2 NetpSTOIIP = new Image2(DonneesETIQUETTE,DonneesLONGITUDE,DonneesLATITUDE,GeneratedLONGITUDEalorigine, GeneratedLATITUDEalorigine, EstimatedARGILE,STOIIP);
        NetpSTOIIP.setBounds(0, 0, 1000, 1000);
        jPanel6.add(NetpSTOIIP);
    }//GEN-LAST:event_jButtonAfficherSTOIIPNetPatActionPerformed

    private void jComboBoxGRAPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGRAPHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxGRAPHActionPerformed
private void ecrireFichier(File fichier){
     PrintWriter PRN=null;
    
        try{
            int i;
            int j;
            int r=tableau.getRowCount();
            PRN= new PrintWriter(new FileWriter(fichier+".txt"));
            int c = titreColonne.length;
            for ( j=0;j<c;j++)
            PRN.print(titreColonne[j]+"\t");
            PRN.print("\n");
            
            for (i=0; i<r-2;i++){
                for (j=0; j<c;j++)
                PRN.print(tableau.getValueAt(i,j)+"\t");
                PRN.println("");
            }
                for (j=0; j<4;j++)
                PRN.print(tableau.getValueAt(r-2, j)+"\t");
            PRN.close();
            jLabelNotification.setText("Données enregistrées avec succès");
        }catch (Exception ex){
            jLabelNotification.setText("Erreur enregistrement des modifications");
        }
        
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cephy_2015.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cephy_2015.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cephy_2015.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cephy_2015.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   Image i=ImageIO.read(getClass().getResource("C:\\Users\\nestor\\Documents\\PAT\\Cephy_2015\\src\\photo\\cephy.png"));
                
              Cephy_2015 KrigeageSTOIIP=   new Cephy_2015();
              KrigeageSTOIIP.setTitle("cephy 2015");
              KrigeageSTOIIP.setVisible(true);
              
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calculer;
    private javax.swing.JMenuItem Enregistrer;
    private javax.swing.JMenuItem Exporter;
    private javax.swing.JMenu Fichier;
    private javax.swing.JMenuItem Ouvrir;
    private javax.swing.JMenuItem Quitter;
    private javax.swing.JMenuItem Rapport;
    private javax.swing.JTabbedPane TabbedPane1;
    private javax.swing.JButton jButtonAfficherSTOIIPNetPat;
    private javax.swing.JButton jButtonAfficherTOIT;
    private javax.swing.JButton jButtonEtiquetterLePuits;
    private javax.swing.JButton jButton_AfficherVarioARGILE;
    private javax.swing.JButton jButton_AfficherVarioMur;
    private javax.swing.JButton jButton_AfficherVarioPOROSITE;
    private javax.swing.JButton jButton_AfficherVarioSATURATION;
    private javax.swing.JButton jButton_AfficherVarioTOIT;
    private javax.swing.JComboBox jComboBoxARGILE;
    private javax.swing.JComboBox jComboBoxETIQUETTE;
    private javax.swing.JComboBox jComboBoxGRAPH;
    private javax.swing.JComboBox jComboBoxLATITUDE;
    private javax.swing.JComboBox jComboBoxLONGITUDE;
    private javax.swing.JComboBox jComboBoxMUR;
    private javax.swing.JComboBox jComboBoxPOROSITE;
    private javax.swing.JComboBox jComboBoxSATURATIONhuile;
    private javax.swing.JComboBox jComboBoxTOIT;
    private javax.swing.JComboBox jComboBox_ToléranceARGILE;
    private javax.swing.JComboBox jComboBox_ToléranceMUR;
    private javax.swing.JComboBox jComboBox_TolérancePOROSITE;
    private javax.swing.JComboBox jComboBox_ToléranceSATURATION;
    private javax.swing.JComboBox jComboBox_ToléranceTOIT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelNotification;
    private javax.swing.JLabel jLabelSTOIIP;
    private javax.swing.JLabel jLabelSTOIIP1;
    private javax.swing.JLabel jLabel_GIIP;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelBoutonLocDesPuits;
    private javax.swing.JPanel jPanelRecoitGraphLocDesPuits;
    private javax.swing.JSpinner jSpinner_MinCoupleARGILE;
    private javax.swing.JSpinner jSpinner_MinCoupleMUR;
    private javax.swing.JSpinner jSpinner_MinCouplePOROSITE;
    private javax.swing.JSpinner jSpinner_MinCoupleSATURATION;
    private javax.swing.JSpinner jSpinner_MinCoupleTOIT;
    private javax.swing.JTabbedPane jTabbedPaneDonnees;
    private javax.swing.JTabbedPane jTabbedPaneExploDonnees;
    private javax.swing.JTabbedPane jTabbedPaneKrigeage;
    private javax.swing.JTabbedPane jTabbedPaneVariogrammes;
    // End of variables declaration//GEN-END:variables

}
